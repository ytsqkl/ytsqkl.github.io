<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>部分国家人口</title>
</head>
<style>
    * {
        margin: 0;
        padding: 0;
    }

    html body {
        width: 100%;
        height: 100%;
        background-color: white;
        overflow: hidden;
    }

    canvas {
        display: block;
        background-color: white;
    }
</style>

<body>
    <canvas></canvas>
    <audio src="https://fdfs.xmcdn.com/group30/M09/53/73/wKgJXlmCLO_AS_wZACYvfN5SdFU965.m4a" autoplay="false" loop="loop"></audio>
    <script>
        let gdps=[];
        let l=667070000;
        let dt=50000000;
        let dw=10000;
        let ptext = ['部分国家人口', '1960-2017', '数据来源：世界银行', 'Wang Bingdong'];
        let title='人口数量（万）';
        function initdata() {
            gdps.push(new gdp('中国', [667070000, 660330000, 665770000, 682335000, 698355000, 715185000, 735400000, 754550000, 774510000, 796025000, 818315000, 841105000, 862030000, 881940000, 900350000, 916395000, 930685000, 943455000, 956165000, 969005000, 981235000, 993885000, 1008630000, 1023310000, 1036825000, 1051040000, 1066790000, 1084035000, 1101630000, 1118650000, 1135185000, 1150780000, 1164970000, 1178440000, 1191835000, 1204855000, 1217550000, 1230075000, 1241935000, 1252735000, 1262645000, 1271850000, 1280400000, 1288400000, 1296075000, 1303720000, 1311020000, 1317885000, 1324655000, 1331260000, 1337705000, 1344130000, 1350695000, 1357380000, 1364270000, 1371220000, 1378665000, 1386395000]));
            gdps.push(new gdp('印度', [449480608, 458494963, 467852537, 477527970, 487484535, 497702365, 508161935, 518889779, 529967317, 541505076, 553578513, 566224812, 579411513, 593058926, 607050255, 621301720, 635771734, 650485030, 665502284, 680915804, 696783517, 713118032, 729868013, 746949067, 764245202, 781666671, 799181436, 816792741, 834489322, 852270034, 870133480, 888054875, 906021106, 924057817, 942204249, 960482795, 978893217, 997405318, 1015974042, 1034539214, 1053050912, 1071477855, 1089807112, 1108027848, 1126135777, 1144118674, 1161977719, 1179681239, 1197146906, 1214270132, 1230980691, 1247236029, 1263065852, 1278562207, 1293859294, 1309053980, 1324171354, 1339180127]));
            gdps.push(new gdp('美国', [180671000, 183691000, 186538000, 189242000, 191889000, 194303000, 196560000, 198712000, 200706000, 202677000, 205052000, 207661000, 209896000, 211909000, 213854000, 215973000, 218035000, 220239000, 222585000, 225055000, 227225000, 229466000, 231664000, 233792000, 235825000, 237924000, 240133000, 242289000, 244499000, 246819000, 249623000, 252981000, 256514000, 259919000, 263126000, 266278000, 269394000, 272657000, 275854000, 279040000, 282162411, 284968955, 287625193, 290107933, 292805298, 295516599, 298379912, 301231207, 304093966, 306771529, 309326085, 311580009, 313874218, 316057727, 318386421, 320742673, 323071342, 325147121]));
            gdps.push(new gdp('俄罗斯', [119897000, 121236000, 122591000, 123960000, 125345000, 126745000, 127468000, 128196000, 128928000, 129664000, 130404000, 131155000, 131909000, 132669000, 133432000, 134200000, 135147000, 136100000, 137060000, 138027000, 139010000, 139941000, 140823000, 141668000, 142745000, 143858000, 144894000, 145908000, 146857000, 147721000, 148292000, 148624000, 148689000, 148520000, 148336000, 148375726, 148160042, 147915307, 147670692, 147214392, 146596557, 145976083, 145306046, 144648257, 144067054, 143518523, 143049528, 142805088, 142742350, 142785342, 142849449, 142960868, 143201676, 143506911, 143819666, 144096870, 144342396, 144496740]));
            gdps.push(new gdp('日本', [92500572, 94943000, 95832000, 96812000, 97826000, 98883000, 99790000, 100725000, 101061000, 103172000, 104345000, 105697000, 107188000, 108079000, 110162000, 111940000, 112771000, 113863000, 114898000, 115870000, 116782000, 117648000, 118449000, 119259000, 120018000, 120754000, 121492000, 122091000, 122613000, 123116000, 123537000, 123921000, 124229000, 124536000, 124961000, 125439000, 125757000, 126057000, 126400000, 126631000, 126843000, 127149000, 127445000, 127718000, 127761000, 127773000, 127854000, 128001000, 128063000, 128047000, 128070000, 127833000, 127629000, 127445000, 127276000, 127141000, 126994511, 126785797]));
            gdps.push(new gdp('印度尼西亚', [87792515, 90138235, 92558005, 95055665, 97638029, 100308894, 103067354, 105907403, 108821564, 111800091, 114834780, 117921998, 121059513, 124242298, 127465231, 130724115, 134010690, 137322118, 140665856, 144053518, 147490365, 150978840, 154506265, 158044343, 161555583, 165012196, 168402025, 171728917, 175000916, 178233223, 181436821, 184615979, 187766086, 190879523, 193945272, 196957849, 199914831, 202826465, 205715544, 208612556, 211540429, 214506502, 217508059, 220545214, 223614649, 226712730, 229838202, 232989141, 236159276, 239340478, 242524123, 245707511, 248883232, 252032263, 255131116, 258162113, 261115456, 263991379]));
            gdps.push(new gdp('德国', [72814900, 73377632, 74025784, 74714353, 75318337, 75963695, 76600311, 76951336, 77294314, 77909682, 78169289, 78312842, 78688452, 78936666, 78967433, 78673554, 78336950, 78159814, 78091820, 78126350, 78288576, 78407907, 78333366, 78128282, 77858685, 77684873, 77720436, 77839920, 78144619, 78751283, 79433029, 80013896, 80624598, 81156363, 81438348, 81678051, 81914831, 82034771, 82047195, 82100243, 82211508, 82349925, 82488495, 82534176, 82516260, 82469422, 82376451, 82266372, 82110097, 81902307, 81776930, 80274983, 80425823, 80645605, 80982500, 81686611, 82348669, 82685827]));
            gdps.push(new gdp('巴西', [72207554, 74351763, 76573248, 78854019, 81168654, 83498020, 85837799, 88191378, 90557064, 92935072, 95326793, 97728961, 100143598, 102584278, 105069367, 107612100, 110213082, 112867867, 115577669, 118342626, 121159761, 124030908, 126947365, 129882321, 132800684, 135676281, 138499464, 141273488, 144001542, 146691981, 149352145, 151976577, 154564278, 157132682, 159705123, 162296612, 164913306, 167545164, 170170640, 172759243, 175287587, 177750670, 180151021, 182482149, 184738458, 186917361, 189012412, 191026637, 192979029, 194895996, 196796269, 198686688, 200560983, 202408632, 204213133, 205962108, 207652865, 209288278]));
            gdps.push(new gdp('英国', [52400000, 52800000, 53250000, 53650000, 54000000, 54348050, 54648500, 54943600, 55211700, 55441750, 55663250, 55896223, 56086065, 56194527, 56229974, 56225800, 56211968, 56193492, 56196504, 56246951, 56314216, 56333829, 56313641, 56332848, 56422072, 56550268, 56681396, 56802050, 56928327, 57076711, 57247586, 57424897, 57580402, 57718614, 57865745, 58019030, 58166950, 58316954, 58487141, 58682466, 58892514, 59119673, 59370479, 59647577, 59987905, 60401206, 60846820, 61322463, 61806995, 62276270, 62766365, 63258918, 63700300, 64128226, 64613160, 65128861, 65595565, 66023290]));
            gdps.push(new gdp('意大利', [50199700, 50536350, 50879450, 51252000, 51675350, 52112350, 52519000, 52900500, 53235750, 53537950, 53821850, 54073490, 54381345, 54751406, 55110868, 55441001, 55718260, 55955411, 56155143, 56317749, 56433883, 56501675, 56543548, 56564074, 56576718, 56593071, 56596155, 56601931, 56629288, 56671781, 56719240, 56758521, 56797087, 56831821, 56843400, 56844303, 56860281, 56890372, 56906744, 56916317, 56942108, 56974100, 57059007, 57313203, 57685327, 57969484, 58143979, 58438310, 58826731, 59095365, 59277417, 59379449, 59539717, 60233948, 60789140, 60730582, 60627498, 60536709]));
            gdps.push(new gdp('孟加拉国', [48199747, 49592802, 51030137, 52532417, 54129100, 55834038, 57672990, 59620669, 61579473, 63417394, 65047770, 66424744, 67597470, 68691185, 69884420, 71305923, 72999136, 74925896, 77033846, 79236776, 81470860, 83721268, 86007331, 88338242, 90732362, 93199865, 95742431, 98343809, 100975321, 103599232, 106188642, 108727432, 111221938, 113695139, 116182267, 118706871, 121269645, 123854640, 126447965, 129029691, 131581243, 134107160, 136600667, 139019001, 141307489, 143431101, 145368004, 147139191, 148805814, 150454708, 152149102, 153911916, 155727053, 157571292, 159405279, 161200886, 162951560, 164669751]));
            gdps.push(new gdp('尼日利亚', [45137812, 46062905, 47029140, 48032246, 49066059, 50127214, 51217359, 52341834, 53505978, 54716735, 55981400, 57295210, 58662603, 60110433, 61673559, 63373572, 65226229, 67215805, 69293550, 71391290, 73460724, 75482552, 77472907, 79462277, 81497739, 83613300, 85818502, 88101628, 90450281, 92844353, 95269988, 97726323, 100221563, 102761737, 105355783, 108011465, 110732904, 113522705, 116385750, 119327073, 122352009, 125463434, 128666710, 131972533, 135393616, 138939478, 142614094, 146417024, 150347390, 154402181, 158578261, 162877076, 167297284, 171829303, 176460502, 181181744, 185989640, 190886311]));
            gdps.push(new gdp('巴基斯坦', [44908293, 45984892, 47119361, 48309315, 49551904, 50845221, 52191095, 53590929, 55042397, 56542434, 58090759, 59687140, 61338261, 63059481, 64870833, 66787901, 68813220, 70946231, 73194937, 75567682, 78068144, 80696945, 83445863, 86297640, 89228949, 92219488, 95264460, 98357473, 101474835, 104588490, 107678614, 110730420, 113747135, 116749560, 119769556, 122829148, 125938339, 129086987, 132253264, 135405584, 138523285, 141601437, 144654143, 147703401, 150780300, 153909667, 157093993, 160332974, 163644603, 167049580, 170560182, 174184265, 177911533, 181712595, 185546257, 189380513, 193203476, 197015955]));
            gdps.push(new gdp('墨西哥', [38174112, 39394126, 40649588, 41939880, 43264272, 44623043, 46011038, 47429812, 48894019, 50423481, 52029861, 53718724, 55478151, 57280587, 59088193, 60872399, 62623763, 64345884, 66039488, 67709689, 69360871, 70992195, 72602533, 74196548, 75780605, 77360707, 78934125, 80503052, 82083919, 83697891, 85357874, 87071512, 88828310, 90600453, 92349147, 94045579, 95687452, 97281739, 98821456, 100300579, 101719673, 103067068, 104355608, 105640453, 106995583, 108472228, 110092378, 111836346, 113661809, 115505228, 117318941, 119090017, 120828307, 122535969, 124221600, 125890949, 127540423, 129163276]));
        }
       
        let w, h, canvas = document.querySelector('canvas'), ctx = canvas.getContext('2d'),  t = 0;
        let xs=0;
        let showptext = true;
        function resize() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            if (canvas.width > canvas.height) {
                w = canvas.width;
                h = canvas.height;
            }
            else {
                ctx.translate(canvas.width, 0);
                ctx.rotate(Math.PI / 2);
                w = canvas.height;
                h = canvas.width;

            }
            xs=w/1800;
            ctx.font = "22px";
        }
        
        resize();
        window.addEventListener('resize', resize);

        class gdp {
            constructor(name, g) {
                this.name = name;
                this.ms = g;
                this.px = 0;
                this.color = `rgb(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)})`;
                this.x = this.ms[0] / l * 0.8 * w + w / 10;
                this.y = Math.floor(h / 13) * (2 + this.px + 0.5);
                this.cgdp = g[0];
                this.tc = 0;

                //this.img = new Image();
                //this.img.src = 'resourse/' + name + '.jpg';


            }
            Draw() {
                if (this.px > 9)
                    return;
                ctx.textAlign = "right";
                ctx.font = Math.floor(36*xs)+"px bold Microsoft YaHei";
                ctx.fillText(this.name, w / 10 - 10*xs, this.y);
                //ctx.drawImage(this.img, w / 10 - 36, this.y - 10, 28, 21);
                ctx.beginPath();
                ctx.lineWidth = 20*xs;
                ctx.strokeStyle = this.color;
                ctx.moveTo(w / 10, this.y);
                ctx.lineTo(this.x, this.y);

                ctx.stroke();
                ctx.textAlign = "left";
                ctx.font = Math.floor(28*xs)+"px Microsoft YaHei";
                ctx.fillText(Math.floor(this.cgdp / dw), this.x, this.y);
            }
            Update(index) {
                this.cgdp = this.ms[index] + (this.ms[index + 1] - this.ms[index]) / 120 * (t % 120);

                this.x = this.cgdp / l * w * 0.8 + w / 10;
                let cpx = 0;
                for (let i = gdps.length - 1; i >= 0; i--) {
                    if (gdps[i].cgdp > this.cgdp) {
                        cpx++;
                    }
                }
                if (cpx > 10) {
                    cpx = 10;
                }
                else if (cpx == 0) {
                    l = this.cgdp;
                }
                if (this.px != cpx) {

                    if (this.tc < 30) {
                        let mypx = this.px + (cpx - this.px) / 30 * (this.tc);
                        this.y = Math.floor(h / 13) * (2 + mypx + 0.5);
                    }
                    else {
                        this.px = cpx;
                    }
                    this.tc++;
                }
                else {
                    this.tc = 0;
                    this.y = Math.floor(h / 13) * (2 + this.px + 0.5);
                }


            }
        }


        initdata();
        function drawbj() {
            ctx.beginPath();
            let i = 0;
            let maxi = Math.floor(l / dt);
            if (maxi > 15) {
                dt *= 2;
            }
            while (dt * (i - 1) < l) {
                ctx.lineWidth = 1;

                ctx.strokeStyle = '#ccc';
                ctx.beginPath();
                let x = dt * i / l * w * 0.8 + w / 10;
                ctx.moveTo(x, h / 13 * 2);
                ctx.lineTo(x, h / 13 * 12);
                ctx.stroke();
                ctx.fillText(dt * i / dw, x, h / 13 * 12);
                i++;
            }

        }
        function drawptext() {
            ctx.font = Math.floor(72*xs)+"px Microsoft YaHei";
            ctx.textAlign = "center";
            ctx.textBaseline = "middle";
            let i = t % 120;
            let o = 1;
            if (i < 30) {
                o = i / 30;
            }
            else if (i > 90) {
                o = (120 - i) / 30;
            }
            ctx.fillStyle = 'rgba(42,42,42,' + o + ')';
            ctx.fillText(ptext[Math.floor(t / 120)], w / 2, h / 2);
        }
        !function loop() {

            ctx.clearRect(0, 0, w, h);
            if (showptext) {
                window.requestAnimationFrame(loop);
                if (t / 120 < ptext.length) {
                    drawptext();
                    t += 1;
                }
                else {
                    t = 0;
                    showptext = false;
                    document.querySelector('audio').play();
                }
            }
            else {
                ctx.fillStyle = "black";
                let index = Math.floor(t / 120);
                ctx.textAlign = "center";
                ctx.textBaseline = "top";
                ctx.font = Math.floor(28*xs)+"px Microsoft YaHei";
                drawbj();
                ctx.textBaseline = "middle";

                ctx.font = Math.floor(48*xs)+"px Bold Microsoft YaHei";
                ctx.fillText(title, w / 2, h / 13 * 1);
                ctx.font = Math.floor(72*xs)+"px Microsoft YaHei";
                ctx.fillText((1961 + index), w / 10 * 9, h / 13 * 11);
                


                ctx.textBaseline = "middle";
                for (let i = 0; i < gdps.length; i++) {

                    gdps[i].Draw(gdps[0].ms[0]);
                    gdps[i].Update(index);


                }

                window.requestAnimationFrame(loop);
                if (t < 57 * 120 - 1) {
                    t += 1;
                }
            }

        }()

    </script>
</body>

</html>